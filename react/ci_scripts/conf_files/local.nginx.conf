#### NGINX for running locally
gzip on;
gzip_min_length 1000;
gzip_http_version 1.1;
gzip_vary on;
gzip_comp_level 6;
gzip_proxied any;
gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
gzip_buffers 16 8k;
# Disable gzip for certain browsers
gzip_disable "MSIE [1-6].(?!.*SV1)";

server {  
  add_header X-Frame-Options SAMEORIGIN;
  add_header X-XSS-Protection "1; mode=block";

  resolver 127.0.0.1;
  listen 80;

  location = /robots.txt {
    add_header  Content-Type  text/plain;
    return 200 "User-agent: *\nDisallow: /\n";
  }

  location /health {
    set $block 1;
    # Allow all the ELB health check agents.
    if ($http_user_agent ~* '^ELB-HealthChecker\/.*$') {
      set $block 0;
    }

    if ($block = 1) { # block invalid requests
      return 444;
    }

    return 200;
    add_header Content-Type text/plain;

  }

  location / {
    
    auth_basic           "Authorized Area";
    auth_basic_user_file /etc/nginx/conf.d/.htpasswd;
    ## Only requests to our domains are allowed i.e. lamplighter.social
    if ($host !~ ^(localhost|lamplighter.social|SITE_CHANGEME.lamplighter.social|www.SITE_CHANGEME.lamplighter.social)$ ) {
      return 444;
    }

    # Reject requests with unsupported HTTP method
    if ($request_method !~ ^(GET|POST)$) {
      return 405;
    }
    # This would be the directory where your React app's static files are stored at
    root /usr/share/nginx/html/;
    try_files $uri /index.html;
  }

  location /PATH_CHANGEME/ {
      # Reject requests with unsupported HTTP method
      if ($request_method !~ ^(GET|POST|)$) {
        return 405;
      }

      # Only requests matching the whitelist expectations will
      # get sent to the application server
      proxy_pass http://server:4000/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache_bypass $http_upgrade;
  }
  location /socket.io/ {
    # Reject requests with unsupported HTTP method
    if ($request_method !~ ^(GET|POST)$) {
      return 405;
    }
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy false;

    proxy_pass http://server:8900; 
    proxy_redirect off;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}
